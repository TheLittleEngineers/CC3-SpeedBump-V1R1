/* ***************************************************************************************************/
/*                                                                                                   */
/* Previous Revisions: 01:09.11.1986, 02:03.30.1987						     */			/*								     				     */
/*                                                                                                   */
/* ***************************************************************************************************/
/* The original design utilized a couple of "primitive" MMI PLD's, with the logic written in PALASM. */
/* Those original design files were created using CoCo CAD for schematics and a  hand  designed  and */
/* etched PCB. When my nephew asked what this board was (it was in one of the CoCo 3s that I gave to */
/* his father, who gave it to him), I explained it's operation to him. My nephew  is  "Little John", */
/* and  so  he  was  intriqued. He reverse engineered the schematic and asked if I could provide the */
/* equations for those old PALs. Back then, I designed everything on paper and later transferred  it */
/* to CoCoCAD. I did not have advanced tools at my disposal. I dusted off my notebooks and found the */
/* design.  Although  workable,  PALs and PLDs  are extinct, so I updated the design to use a single */
/* Lattice or Atmel 22V10 GAL and rewrote the equations in CUPL and sent that to  "Little John".  My */
/* twin brother, "Big John" contacted me today, distraught at the suicide of his friend and neighbor */
/* Joey. During the course of the conversation, he mentioned that he  was  distributing  all  of  my */
/* Nephew's  Color Computer, Sinclair, Coleco, etc.  designs as open source hardware, which was what */
/* "Little John" wanted. Given that some of the designs were either my work, reworkings of  my  work */
/* and so on, "Big John"  asked  for my permission to distribute those files that might contain some */
/* of my work. I told him the same thing that I told "Little John" back in 2008 - I gave all  of  my */
/* work  to  John Eric back in 2008 to do with as he wanted. Whatever "Big John" determines to be an */
/* appropriate license is fine. Basically, you can  sell  products  based  on  my  work,  give  them */
/* away, etc. My  Forte'  was  software,  so  VERY LITTLE  of  my  Nephew's work will likely contain */
/* anything that I designed. The two that come to mind are this SpeedBump design and my  512K Static */
/* RAM Upgrade for the CoCo 3. SpeedBump was created  in  1986  and  the  SRAM Upgrade  was  created */
/* in 1991, I think. Given  that  I  abandoned the CoCo, Kaypro and Sinclair markets long ago, it is */
/* likely that you (the person reading this) will understand more about my designs than I do at this */
/* stage. My brother, "Big John" might be able to be of some help in this  area,  or  maybe  "Little */
/* John", though I haven't heard from him personally since early 2010. Regardless, I do not wish  to */
/* be  bothered with any of this, I have far more pressing issues to occupy my time these days and I */
/* prefer to be left alone. This seemed important to my brother, so I am assisting with some of  it, */
/* though  not  very  much.  Thus, if  any  of  my  work turns up as part of "Little John's" work or */
/* otherwise, feel free to do whatever you need to do with it, EXCEPT claim it  as  your  own.  What */
/* follows  is  the  original  write-up  that  I  prepared  for  "Little John" in 2008 regarding the */
/* "SpeedBump" design. - "Ankle Bob" - August 31, 2017 (am I really that old?)			     */
/*												     */
/*                                                                                                   */
/* ************************************************************************************************* */
/*                                                                                                   */
/* ************************************************************************************************* */
/* SpeedBump - A Hardware Project For The Tandy Radio Shack TRS-80 Color Computer 3
/*                 by: "Ankle Bob", licensed to: "Little John"
/*                      Summary Written: January 16, 2008
/* This brief describes a relatively simple project to restore, to an  extent,  the
/* Color Computer 1 and 2 high-speed POKE to the Tandy Color Computer 3. Some might
/* consider  this  to  be  a bit of folly, after all, "Doesn't the Color Cumputer 3
/* possess a superior high-speed POKE?" Yes, indeed it does. However,  one  of  the
/* very  first  things  that  I noticed about my newly acquired CoCo 3, circa 1986,
/* was the fact that the old high-speed POKE no longer  functioned.  This  had  the
/* effect  of  rendering  some  of  my  favorite  programs,  such  as "Paint King",
/* unusable, or nearly so. Now, it  was  a  very  simple  matter  to  patch  "Paint
/* King"  and similar BASIC and unprotected programs by simply substituting the new
/* POKE for the old. In fact, this actually improved the functionality of  programs
/* such  as  "Paint King".  This  was  due  to the CoCo 3 high-speed POKE NOT BEING
/* ADDRESS DEPENDENT, as it was on  the  CoCo 1 and 2.  Many  machine-language  and
/* "protected"  programs  proved difficult, and in some cases, impossible to patch.
/* After wasting many hours with a "Disk Zapper", hacking and patching, I set about
/* to solve the problem, once and for all, in hardware.
/* 
/* In theory, at least, it should be quite possible and simple enough to socket the
/* MC68B09E CPU  and  stick a circuit between the CPU and the rest of the system to
/* monitor the Address Buss and pass all addresses straight through, EXCEPT for the
/* old high/slow-speed POKE addresses. The old high/slow-speed POKE addresses would
/* be modified (converted to the NEW high/slow-speed addresses) and passed  through
/* as the new addresses. Thanks  to the amazingly versatile (at the time)  PALs and
/* PLDs  of  the era,  this is exactly what I did. Two PLD/PALs provided an elegant
/* two  chip  solution. A  request  from  my  nephew, "Little John",  prompted  me,
/* in  part,  to  redesign  the  device  utilizing  a  single 22V10 GAL. This was a
/* desirable decision due to the scarcity of the older PLD and PAL devices and  the
/* fact that often, when purchased, the older devices have already been programmed.
/* Being fusible link based  devices, this renders  them  unusable  and  completely
/* useless. A GAL chip is  also much faster and flash-based  (reusable)  with  some
/* offering  In  System Programming (such as the ISPGAL22V10 from Lattice.) The ISP
/* version  is not used here, as they are a bit  difficult  to  obtain,  so  you'll
/* need  a  GAL  programmer  to  complete  this project, or at least access to one.
/* 
/* The g22v10d is reccommended due to its  higher  speed  than  the  plain  vanilla
/* g22v10, although it should work as well. The A,B and C versions could be used as
/* well. The  CUPL code is self-explanatory and this truly is a very simple device.
/* Note that the two old addresses are simply converted to the two  new  addresses.
/* This  effectively  restores  the old high-speed POKE with the exception that the
/* machine will run at 1.79MHz at all times when the POKE is enabled.  This  is  in
/* contrast to the CoCo 1 and 2, which only ran at 1.79MHz during access to the ROM
/* area ($8000 - $FEFF) and  only  if  the  ROMs were enabled. It ran at .89MHz for
/* accesses to the lower 32K (RAM area) and, if the machine were a 64K RAM  machine
/* running in All RAM mode,  it  would  stay  at  .89MHz  during  accesses  to  the
/* $8000-$FEFF  area  as well. In short, the old high speed POKE only functioned if
/* the BASIC ROMs were in circuit and being executed by the CPU.
/* ************************************************************************************************* */